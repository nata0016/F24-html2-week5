/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
	


/******************************************
		Main
******************************************/

html{
	font-family:'Just Another Hand', cursive;
	letter-spacing:3px;
	
	background:hsl(260,65%,95%);	
}

#container{
	width:100vw;
	max-width:800px;
	height:100vh;
	margin:0 auto;
}

h1{
	font-size:48px;
	padding:20px;
}

footer{
	margin-top:25px;	
}

footer p{
	padding:20px;
	text-align:right;
}
/************************************
         TRANSFORM
**************************************/
.shapes{
	display: flex;
	justify-content: space-evenly;
}		 
.shape1{
	width: 60px;
	height: 60px;
	background: lightblue;
}
.shape1:nth-child(1){
	/* call the pendulum animation by name*/
	animation-name: pendulum;
	animation-duration: 3s;
	animation-timing-function: ease-in-out;
	animation-iteration-count: infinite;
	/* you can change the direction of the animation, normal, reverse or alternate*/
	animation-direction: alternate;
}
.shape1:nth-child(2) {
	/* use transform to rotate the element
	rotation is measured in degrees, up to 360 */
transform: rotate(45deg);
	/*transition tells an element to animate a change*/
		transition: all 2s
}
	.shape1:nth-child(2):hover{
		/* CHANGE THE ROTATION ON HOVER*/
		transform: rotate(200deg)

	}
.shape1:nth-child(3) {
	/* use transform: scale to change the size of an object
	1 is default size 
	scale doesnt change the structure of the page, just makes the objects look bigger or smaller*/
	transform: scale(0,5, 0,75);
	/* one values scales width and height
	two values scales width tha height*/
	/* do a compund transition, different timings for different properties*/

	transition: background-color 2s, transform 500ms;
	/* try the complex jump...*/
	animation: complex-jump 3s ease-in-out infinite;
}
.shape1:nth-child(3):hover{
	background-color: red;
}
.shape1:nth-child(3):active{
transform: scale(4, 4);
}
.shape1:nth-child(4){
	/* skew adds a distortion to the element it is 
	also measured in degrees*/
	transform: skew(-30deg, 40deg);
	/* skew can be negative or positive, depending on
	the way you want the element to distort,
	one value skews horizontal and vertical 
	two values skews horizontal then vertical
	you can also use skewX() OR skewY()*/
	animation-name: jump;
	animation-duration: 750ms;
	animation-timing-function:ease-in-out ;
	animation-iteration-count:infinite ;
	animation:1s; 
	
}
.shape1:nth-child(5){
	/* transform multiple propereties at the same time*/
	transform: rotate(20deg) scale(0.8) skew(10deg, 40deg);
	transition: all 2s;
	/* if we want to apply the animation, call it by 
	animation-name and animation-duration are required properties*/
	animation-name: jump;
	animation-duration: 2s;
	/* there are other  optional animation properties*/
	animation-timing-function: ease-in-out;
	animation-iteration-count: infinite;/* or set a number of times*/
}
.shape1:nth-child(5):hover{
	transform: rotate(270deg) scale(2.3) skew(50deg, -25deg);
}
/************************************
         ANIMATIONS
**************************************/
/* keyframes defines an animation - inside you set up how the animation will play*/
@keyframes jump{
/* keyframes are points in animation- they are defined by percentage
in order to make it work, you have to call it by name on an element*/
50%{
	transform: translate(0, -100px);
}	
}
@keyframes pendulum{
	/* use 0%, 100% to apply a property to the whole animation */
	0%,
	100% {
		/* transform origin sets the anchor point for the object to move*/

		transform-origin: 0 -100px;
	}
	0%{
		transform: rotate(77deg);

	}
	100%{
		transform: rotate(-45deg);
	}
}
@keyframes complex-jump{
	/* you can add as many keyframes as you need, with all different properties*/
	5%{
		transform: scaleY(0.9);
		transform: translateY(0);
	}
	10%{
		transform: scaleY(1.1);
	}
	50%{
		transform: scaleY(-100px);
		transform: translateY(-100px);
	}
	90%{
		transform: scaleY(1);
	}
	95%{
		transform: scaleY(0.9);
		transform: translateY(0);
	}
	100%{
		transform: scaleY(1);
	}
}
/************************************
         SLIDER
**************************************/
.slider{
	margin: 30px auto 0;
	/* three properties in margin mean top, left-right, bottom*/
	width: 80%;
	/* text-align will center images as well as text*/
	text-align: center;
	/* to hide  anything outside the slider, use overflow: hidden*/
	overflow: hidden;
}
.slideback{
	position: relative;
	/* by giving this element position: relative, it will contain the absolutely 
	positionned slider(below)*/
}
/* the > is the direct child selector , which selects 
only the elements which are children not grandchildren or great-grand chinldren*/
.slideback > img {
	width: 100%;
}
.slideholder{
	/* position: absolute is relative to the browser window
	or to the last element with a position property */
	position: absolute;
	top: 0;
	width: 300%;
	height: 100%;
	display: flex;
	/* add an animation on change*/
	transition: margin 1s;
}
.imgslide{
	/* flex-grow will allow objects to expand and take up the whole width*/
	flex-grow: 1;
	height: 100%;
}
.imgslide img{
	margin-top: 26%;
	width: 26%;
}
/* style radio buttons based on whether they are checked...
the ~ is the "after" selector, targeting an element that comes after another (in html order)*/
#slide1:checked ~ .slideback .slideholder{ margin-left: 0;}
#slide2:checked ~ .slideback .slideholder{ margin-left: -100%;}
#slide3:checked ~ .slideback .slideholder{ margin-left: -200%;}
/************************************
         LABELS
**************************************/
label{
	/* inline-block makes these behaves like images: 
	they can have a width and a height, but they will sit horizontally*/
	display: inline-block;
	width: 100px;
	padding: 5px 0;
	text-align: center;
	margin: 0 15px;
	/* hsla (HUE, SATURATION, LUMINOSITY, ALPHA) is a way of setting
	colours that makes is easy to get darker and lighter colours of the 
	same hue*/
	border: 2px solid hsla(101,100%,30%,1.00);
	background: hsla(101,100%,80%,1.00);
	font-size: 24px;
	border-radius: 10px;
	/* add an animation so the colour change on hover looks softer*/
	transition: background 0.5s, transform 0.15s;
}
label:hover{
	background: hsla(101,100%,40%,1.00);
	/* change the cursor to a pointer, so it loooks like a button*/
	cursor: pointer;
}
label:active{
	transform: scale(0.9);
}
/* hide the radio buttons- use the attribute selector to get only 
the radio buttons*/
input[type="radio"]{
	display: none;
}
/*use the sibling selector ~  to grab one of the labels based on which radio buttob
is checked*/
#slide1:checked ~ label.shape1:nth-child(1){
	background: hsla(101,100%,50%,1.00); 
	font-weight: bold;
#slide1:checked ~ label.shape1:nth-child(2){
		background: hsla(101,100%,50%,1.00); 
		font-weight: bold;
	}
#slide1:checked ~ label.shape1:nth-child(3){
		background: hsla(101,100%,50%,1.00); 
		font-weight: bold;
	}
}